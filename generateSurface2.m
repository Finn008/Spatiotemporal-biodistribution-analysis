%     application
%     roi
%     channel
%     smooth
%     background
%     lowerEnabled
%     lowerAuto
%     lowerManual
%     upperEnabled
%     upperAuto
%     upperManual
%     surfaceFilter
%     gap
%     trackFilter
%     maxDist
%     surfaceInfo
%     storeAsChannel
%     RGBA
%     seedsDiameter
function [vSurfaces,surfaceInfo]=generateSurface2(ii)
v2struct(ii);
% set nonexistent inputs to empty
nonexistentVars={...
    'roi','[]';...
    'smooth','0';...
    'background','0';...
    'seedsDiameter','0';...
    'seedsBackground','0';...
    'seedsFilter','[]';...
    'surfaceFilter','[]';...
    'maxDist','[]';...
    'gap','[]';...
    'trackFilter','[]';...
    'surfaceName','[]';...
    'RGBA','[]';...
    'surfaceInfo','[]';...
    'storeAsChannel','0';...
    'blackBox','[]';...
    'type','''surface''';...
    'diaXYZ','[1,1,1]';...
    'growingType','0';...
    'createRegionsChannel','0';...
    'RegionsFromLocalContrast','0';...
    };

for m=1:size(nonexistentVars,1)
    if exist(nonexistentVars{m,1})~=1
%         if isfield(i,nonexistentVars{m,1})==0
%         path=['i.',nonexistentVars{m,1},'=',nonexistentVars{m,2},';'];
        path=[nonexistentVars{m,1},'=',nonexistentVars{m,2},';'];
        eval(path);
    end
end



if isnumeric(channel)==0
    channel=getChannelId(application,channel);
else
    channel=channel;
end
if isempty(blackBox)==0
    [dataOrig]=Im2Matlab(application,channel,1);
    dataBlack=dataOrig;
    dataBlack(:,:,1)=blackBox;
    dataBlack(:,:,end)=blackBox;
    dataBlack(:,1,:)=blackBox;
    dataBlack(:,end,:)=blackBox;
    dataBlack(1,:,:)=blackBox;
    dataBlack(end,:,:)=blackBox;
    Ex2Imaris(application,dataBlack,channel,1);
end
if exist('lowerManual')==1
% if isfield(i,'lowerManual')
    lowerEnabled=1;
    lowerAuto=0;
else
    lowerEnabled=0;
end

if exist('upperManual')==1
%     if isfield(i,'upperManual')
    upperEnabled=1;
    upperAuto=0;
else
    upperEnabled=0;
end

if strcmp(type,'spot')
    vSurfaces=application.GetImageProcessing.DetectEllipticSpotsRegionGrowing(...
        application.GetDataSet,...
        roi,...
        channel-1,...
        diaXYZ,...
        background,...
        surfaceFilter,...
        RegionsFromLocalContrast,... % RegionsFromLocalContrast
        lowerAuto,... % RegionsThresholdAutomatic
        lowerManual,... % RegionsThresholdManual
        growingType,...
        createRegionsChannel);
elseif strcmp(type,'surface')
    if seedsDiameter==0
        vSurfaces=application.GetImageProcessing.DetectSurfacesWithUpperThreshold(...
            application.GetDataSet,...
            roi,...
            channel-1,...
            smooth,...
            background,...
            lowerEnabled,...
            lowerAuto,...
            lowerManual,...
            upperEnabled,...
            upperAuto,...
            upperManual,...
            surfaceFilter);
    else
        vSurfaces=application.GetImageProcessing.DetectSurfacesRegionGrowingWithUpperThreshold(...
            application.GetDataSet,...
            roi,...
            channel-1,...
            smooth,...
            background,...
            lowerEnabled,...
            lowerAuto,...
            lowerManual,...
            upperEnabled,...
            upperAuto,...
            upperManual,...
            seedsDiameter,...
            seedsBackground,...
            seedsFilter,...
            surfaceFilter);
    end
end
if isempty(maxDist)==0
    % try;
    vSurfaces=application.GetImageProcessing.TrackSurfacesAutoregressiveMotion(vSurfaces,maxDist,gap,trackFilter);
    % catch; end;
end





setImarisViewer(application,'surpass')

% show surfaces
vSurpassScene = application.GetSurpassScene;

if isempty(vSurpassScene)
    a1=asdfedd;
end
% if exist('surfaceName','var') && isempty(surfaceName)==0
if isempty(surfaceName)==0
    vSurfaces.SetName(surfaceName);
end
% if exist('RGBA','var') && isempty(RGBA)==0
if isempty(RGBA)==0
    RGBA=RGBAconverter(RGBA);
    vSurfaces.SetColorRGBA(RGBA);
end

vSurpassScene.AddChild(vSurfaces, -1);
if storeAsChannel==1
    [mask]=Im2Matlab(application,{vSurfaces},[],'surface');
    Ex2Imaris(application,mask,surfaceName,1);
    application.GetSurpassScene.RemoveChild(vSurfaces);
    vSurfaces=mask;
    clear mask;
end

if isempty(surfaceInfo)==0
    % if exist('surfaceInfo','var') && strcmp(surfaceInfo,'getInfo');
    [surfaceInfo]=getObjectInfo(vSurfaces);
else
    surfaceInfo=[];
end
if isempty(blackBox)==0
    Ex2Imaris(application,dataOrig,channel,1);
end
a1=1;
